Clear["`*"];
ch[gh_] := Module[{}, {gh[[1, 1]], gh[[2, 2]], 2 gh[[1, 2]]}];
ch3[gh_] := 
  Module[{}, {gh[[1, 1]], gh[[2, 2]], gh[[3, 3]], 2 gh[[1, 2]]}];
chb3[gh_] := 
  Module[{}, {{gh[[1]], gh[[4]]/2, 0}, {gh[[4]]/2, gh[[2]], 0}, {0, 0,
      gh[[3]]}}];
chsb3[gh_] := 
  Module[{}, {{gh[[1]], gh[[4]], 0}, {gh[[4]], gh[[2]], 0}, {0, 0, 
     gh[[3]]}}];
chs3[gh_] := 
  Module[{}, {gh[[1, 1]], gh[[2, 2]], gh[[3, 3]], gh[[1, 2]]}];
divM[gb_] := Module[{},
   ingb = Inverse[gb];
   ingbdgb = 
    Table[(-ingb)[[i, j]]*ingb[[k, l]], {j, 2}, {k, 2}, {i, 2}, {l, 
      2}];
   Return[ingbdgb];
   ];

(*xy0={{0, 0.5}, {0,0}, {1,0}, {1, 1}};
uv0 ={{0.05,0},{0,0},{0,0},{0,0}};*)
\[Delta]uv = {{0.0000001, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
    0}};
lc = {{-1, -1}, {1, -1}, {1, 1}, {-1, 1}};


lev = Table[lex[i], {i, 4}];
epv = Table[epx[i], {i, 4}];
Do[NN[i] = (1 + lc[[i, 1]]*kk[1])*(1 + lc[[i, 2]]*kk[2])/4, {i, 4}];
NN1 = Table[NN[i], {i, 4}];
poly = {1, x, y, kk[1] kk[2]};

duv = Table[{du[i], dv[i]}, {i, 4}];
E0 = 3000;
mu = 0.3;
D0 = E0/(1 - mu^2);
(*Dek=D0(\[NoBreak]1	mu	0
mu	1	0
0	0	(1-mu)/2

\[NoBreak]);*)
Dek2 = D0 ({
     {1, mu, 0, 0},
     {mu, 1, 0, 0},
     {0, 0, 0, 0},
     {0, 0, 0, (1 - mu)/2}
    });

FH0 = Integrate[1, {kk[1], -1, 1}, {kk[2], -1, 1}];
FH1 = Integrate[kk[1], {kk[1], -1, 1}, {kk[2], -1, 1}];
FH11 = Integrate[kk[2], {kk[1], -1, 1}, {kk[2], -1, 1}];
FH2 = Integrate[kk[1]*kk[2], {kk[1], -1, 1}, {kk[2], -1, 1}];
FH22 = Integrate[kk[1]^2, {kk[1], -1, 1}, {kk[2], -1, 1}];
FH3 = Integrate[kk[2]^2, {kk[1], -1, 1}, {kk[2], -1, 1}];
FHlist = {FH0, FH1, FH11, FH2, FH22, FH3};

check[xy0_, k_] := Module[{xy, subskk},
   subskk = Table[kk[i] -> k[[i]], {i, 2}]; 
   xy =  Sum[NN[i] * xy0[[i]], {i, Length[xy0]}] /. subskk;
   Return[Flatten[{x -> xy[[1]], y -> xy[[2]], subskk}]];
   ];

getCoefdU[coefdU_, p_, subsu1_] := Module[{Coefdu, U1}, 
   M = Inverse[coefdU];
   U1 = Flatten[Table[duv[[i, p]], {i, 4}]];
   (*Print["M=",M];*)
   
   dMdu1 = 
    Table[D[M[[i, j]], U1[[m]]], {m, 4}, {i, 4}, {j, 4}] /. subsu1;(*[
   4,4,4]*)
   U1 = U1 /. subsu1;
   coefdU1 = coefdU(*/.subsu1*);
   
   Coefdu = Table[0, 4, 8];
   temp1 = 
    Table[Sum[-coefdU1[[i, j]]*dMdu1[[k, j, m]], {j, 4}], {k, 4}, {i, 
      4}, {m, 4}];
   temp2 = 
    Table[Sum[temp1[[k, i, j]]*coefdU1[[j, m]], {j, 4}], {k, 4}, {i, 
      4}, {m, 4}];
   temp3 = 
    Table[Sum[temp2[[k, i, j]]*U1[[j]], {j, 4}], {k, 4}, {i, 4}];
   Do[Coefdu[[i, 2* (j - 1) + p]] = 
     Transpose[temp3][[i, j]] + coefdU1[[i, j]], {i, 4}, {j, 4}];
   (*Coefdu=Coefdu/.subsu1;*)
   Return[Coefdu\[Transpose]];
   ];

(*---------------------------------------------*)
getSig[le_, ep_, peeq0_] := Module[{},
   subsle = Table[lev[[i]] -> le[[i]], {i, 4}];
   subsep = Table[epv[[i]] -> ep[[i]], {i, 4}];
   ee0 = lev - epv /. subsle /. subsep;
   sig0 = Dek2 . ee0;(*[1*4]*)
   sig0 = chsb3[sig0];(*[3,3]*)
   
   \[Sigma]s = 100*peeq0 + 50;
   
   p = -1/3*Tr[sig0];
   S0 = sig0 + p*IdentityMatrix[3];
   q0 = (3/2*Sum[S0[[i, j]]*S0[[i, j]], {i, 3}, {j, 3}])^0.5;
   F = q0 - \[Sigma]s;
   
   If[F <= 0,
    {sig = chs3[sig0];(*[1*4]*)
     ep1 = ep;
     peeq1 = peeq0;
     sigdle = Dek2;
     sigdep = -Dek2;},
    {{sig, ep1, peeq1, sigdle, sigdep} = 
       material[le, ep, peeq0, subsle, subsep];
     }
    ];
   Return[{sig, ep1, peeq1, sigdle, sigdep}];
   ];
material[le_, ep_, peeq0_, subsle_, subsep_] := Module[{},
   dep = Table[ddep[i], {i, 4}];
   ee = lev - epv - dep;
   sig = Dek2 . ee;(*[1*4]*)
   \[Sigma]0 = Table[sigd[i], {i, 4}];
   subs = Table[\[Sigma]0[[i]] -> sig[[i]], {i, 4}];
   \[Sigma]0 = chsb3[\[Sigma]0];
   p = -1/3*Tr[\[Sigma]0];
   S = \[Sigma]0 + p*IdentityMatrix[3];
   E1 = chb3[dep] - 1/3*Tr[chb3[dep]]*IdentityMatrix[3];
   q = (3/2*Sum[S[[i, j]]*S[[i, j]], {i, 3}, {j, 3}])^0.5;
   
   direc = Table[D[q, chs3[\[Sigma]0][[i]]] /. subs, {i, 4}];
   dpeeq = (2/3*Sum[E1[[i, j]]*E1[[i, j]], {i, 3}, {j, 3}])^0.5 /. 
     subs;
   eq1 = Table[d\[Lambda]*direc[[i]] - dep[[i]], {i, 4}];
   eq2 = {(q /. subs) - (100*(peeq0 + dpeeq) + 50)};
   eqs = Join[eq1, eq2];
   var = Append[dep, d\[Lambda]];
   eqsdvar = Table[D[eqs[[i]], var[[j]]], {i, 5}, {j, 5}];
   {dep0, d\[Lambda]0} = 
    newton[eqs /. subsep /. subsle, var, 
     eqsdvar /. subsep /. subsle];
   subsdep = Table[dep[[i]] -> dep0[[i]], {i, 4}];
   subd\[Lambda] = d\[Lambda] -> d\[Lambda]0;
   subsall = Flatten[{subsep, subsle, subsdep, subd\[Lambda]}];
   {sigdle, sigdep} = getK[eqs, var, eqsdvar, subsall];
   ep1 = epv + dep /. subsall;
   peeq1 = peeq0 + dpeeq /. subsall;
   sig = sig /. subsall;
   Return[{sig, ep1, peeq1, sigdle, sigdep}];
   ];
getK[eqs_, var_, Jac_, subsall_] := Module[{},
   Jac1 = Jac /. subsall;
   
   eqsdle = Table[D[eqs[[i]], lev[[j]]], {i, 5}, {j, 4}] /. subsall;
   eqsdep = Table[D[eqs[[i]], epv[[j]]], {i, 5}, {j, 4}] /. subsall;
   depdle = Inverse[Jac1] . (-eqsdle);(*[4*4]*)
   depdep = Inverse[Jac1] . (-eqsdep);
   sigdle = Dek2 . (IdentityMatrix[4] - Table[depdle[[i]], {i, 4}]);
   sigdep = Dek2 . (-IdentityMatrix[4] - Table[depdep[[i]], {i, 4}]);
   Return[{sigdle, sigdep}];
   ];
newton[eqs_, var_, Jac_] := Module[{dep0, d\[Lambda]0},
   eqs0 = eqs;
   var0 = var;
   subsvar = Table[var0[[i]] -> 0.0000001, {i, 5}];
   Do[
    Jac0 = Jac /. subsvar;
    Res = 0 - eqs0 /. subsvar;
    If[Norm[Res] <= 1*10^-6, Break[];];
    dds = Inverse[Jac0] . Res;
    subsvar = Table[var0[[i]] -> subsvar[[i, 2]] + dds[[i]], {i, 5}];
    , {iv, 10}];
   dep0 = Table[subsvar[[i, 2]], {i, 4}];
   d\[Lambda]0 = subsvar[[5, 2]];
   Return[{dep0, d\[Lambda]0}];
   ];
(*---------------------------------------------*)


cps4R[xy0_, uv0_, leu_, ep0_, peeq0_] := 
  Module[{uv, coef, X, Xl, dV, coefdu, subsu, dU}, 
   
   subsu = 
    Flatten[Table[duv[[i, j]] -> uv0[[i, j]], {i, 4}, {j, 2}]];
   
   subsPoly = 
    Table[Flatten[{x -> (xy0[[i, 1]] + duv[[i, 1]]/2), 
       y -> (xy0[[i, 2]] + duv[[i, 2]]/2), 
       Table[kk[j] -> lc[[i, j]], {j, 2}]}], {i, 4}];
   U1 = Table[duv[[j, i]], {j, 4}, {i, 2}];
   
   dU1 = 
    Table[D[U1[[i, j]], Flatten[U1][[m]]], {m, 8}, {i, 4}, {j, 2}];
   
   M = Table[poly /. subsPoly[[i]], {i, 4}];
   coefdU = Inverse[M];
   
   dMdU1 = 
    Table[D[M[[i, j]], Flatten[U1][[m]]], {m, 8}, {i, 4}, {j, 4}];
   
   dcoefdU11 = 
    Table[Sum[-coefdU[[i, j]]*dMdU1[[m, j, k]], {j, 4}], {m, 8}, {i, 
      4}, {k, 4}];
   dcoefdU12 = 
    Table[Sum[dcoefdU11[[m, i, j]]*coefdU[[j, k]], {j, 4}], {m, 
      8}, {i, 4}, {k, 4}];
   
   dcoefdU1 = 
    Table[D[coefdU[[i, j]], Flatten[U1][[m]]], {m, 8}, {i, 4}, {j, 4}];
   
   coef = 
    Table[Sum[coefdU[[i, j]]*U1[[j, k]], {j, 4}], {k, 2}, {i, 4}] /. 
     subsu;
   (*[2,4]*)
   coefdu = 
    Table[Sum[coefdU[[i, j]]*dU1[[m, j, k]], {j, 4}], {m, 8}, {k, 
        2}, {i, 4}] + 
      Table[Sum[dcoefdU1[[m, i, j]]*U1[[j, k]], {j, 4}], {m, 8}, {k, 
        2}, {i, 4}] /. subsu;
   dNNdkk1 = D[NN1, kk[1]];
   dNNdkk2 = D[NN1, kk[2]];
   dNNdkk = {dNNdkk1, dNNdkk2} /. check[xy0, {0, 0}];
   Xl = {{Sum[dNNdkk1[[i]]*(xy0[[i, 1]] + duv[[i, 1]]/2), {i, 4}], 
      Sum[dNNdkk1[[i]]*(xy0[[i, 2]] + duv[[i, 2]]/2), {i, 4}]}, {Sum[
       dNNdkk2[[i]]*(xy0[[i, 1]] + duv[[i, 1]]/2), {i, 4}], 
      Sum[dNNdkk2[[i]]*(xy0[[i, 2]] + duv[[i, 2]]/2), {i, 4}]}};
   lX = Inverse[Xl] /. subsu;
   (*Xldu=Table[D[Xl[[i,j]],Flatten[duv][[k]]],{k,8},{i,2},{j,
   2}]/.subsu;*)
   Xl = Xl /. subsu;
   
   
   polydx1 = Table[D[poly[[i]], poly[[j]]], {i, 4}, {j, 2, 3}];
   polydkk = 
    Table[D[poly[[i]], kk[j]], {i, 4}, {j, 2}] /. check[xy0, {0, 0}];
   polydx2 = polydkk . lX;
   polydx = polydx1 + polydx2;(*[4,2]*)
   
   polydxdu = 
    Table[D[polydx [[i, j]], Flatten[duv][[k]]], {k, 8}, {i, 4}, {j, 
       2}] /. subsu;(*polydxdu==0*)
   
   ux = Table[
      Sum[coef[[i, j]]*polydx[[j, k]], {j, 4}], {i, 2}, {k, 2}] /. 
     check[xy0, {0, 0}];
   
   uxdu = 
    Table[Sum[coefdu[[m, i, j]]*polydx[[j, k]], {j, 4}], {m, 8}, {i, 
       2}, {k, 2}] /. check[xy0, {0, 0}];
   
   is = Simplify[(ux + ux\[Transpose]) / 2];
   iw = Simplify[(ux - ux\[Transpose]) / 2] /. check[xy0, {0, 0}];
   isdu = 
    Table[Simplify[uxdu[[i]] + (uxdu[[i]])\[Transpose]], {i, 8}] / 
     2 ;
   
   iwdu = 
    Table[Simplify[uxdu[[i]] - (uxdu[[i]])\[Transpose]], {i, 8}] / 
     2 ;(*[8,2,2]*)
   ism = {{is[[1, 1]], is[[1, 2]], 0}, {is[[2, 1]], is[[2, 2]], 
      0}, {0, 0, 0}};(*[3,3]*)
   iwm = {{iw[[1, 1]], iw[[1, 2]], 0}, {iw[[2, 1]], iw[[2, 2]], 
      0}, {0, 0, 0}};
   iR1m = IdentityMatrix[3] - iwm/2;
   iR2m = IdentityMatrix[3] + iwm/2;
   iRm = (Inverse[iR1m]) . (iR2m);(*[3,3]*)
   iR1du = -0.5*iwdu;
   iR2du = 0.5*iwdu;
   IiR1diR1 = divM[iR1m];(*注意这里的divM是2*2的，而iRm是3*3的*);
   IiR1du = 
    Table[Sum[
      IiR1diR1[[k, l, i, j]]*iR1du[[m, k, l]], {k, 2}, {l, 2}], {m, 
      8}, {i, 2}, {j, 2}];
   iRdu = 
    Table[Sum[IiR1du[[m, i, j]]*iR2m[[j, l]], {j, 2}], {m, 8}, {i, 
       2}, {l, 2}] + 
     Table[Sum[Inverse[iR1m][[i, j]]*iR2du[[m, j, l]], {j, 2}], {m, 
       8}, {i, 2}, {l, 2}];
   iRTdu = Transpose[iRdu, 2 <-> 3];
   lem = iRm . leu . Transpose[iRm] + ism /. check[xy0, {0, 0}];
   epm = iRm . ep0 . Transpose[iRm];(*[3,3]*)
   (*lem--ledu*)
   (*leVm--leduV*)
   ledu = 
    Table[Sum[
       iRdu[[m, k, l]]*(leu . Transpose[iRm])[[l, j]], {l, 2}], {m, 
       8}, {k, 2}, {j, 2}] + 
     Table[Sum[(iRm . leu)[[k, l]]*iRTdu[[m, l, j]], {l, 2}], {m, 
       8}, {k, 2}, {j, 2}] + isdu;
   
   leVm = ch3[lem];(*[1,4]*)
   leduV = Table[ch[Table[ledu[[m, i, j]], {i, 2}, {j, 2}]], {m, 8}];(*[
   8,3]*)
   
   leduVm = 
    Table[{leduV[[i, 1]], leduV[[i, 2]], 0, leduV[[i, 3]]}, {i, 8}];
   epdu = 
    Table[Sum[
       iRdu[[m, k, l]]*(ep0 . Transpose[iRm])[[l, j]], {l, 2}], {m, 
       8}, {k, 2}, {j, 2}] + 
     Table[Sum[(iRm . ep0)[[k, l]]*iRTdu[[m, l, j]], {l, 2}], {m, 
       8}, {k, 2}, {j, 2}];
   
   epVm = ch3[epm];
   epduV = Table[ch[Table[epdu[[m, i, j]], {i, 2}, {j, 2}]], {m, 8}];
   epduVm = 
    Table[{epduV[[i, 1]], epduV[[i, 2]], 0, epduV[[i, 3]]}, {i, 8}];
   (*sigVm=  Dek2.leVm;*)
   {sigVm, ep1, peeq1, sigdle, sigdep} = 
    getSig[leVm /. check[xy0, {0, 0}], epVm, peeq0];
   ep1[[3]] = 0;
   sigm = chsb3[sigVm] /. subsu /. check[xy0, {0, 0}];
   
   sigVdu = 
    Table[Sum[sigdle[[i, j]]*leduVm[[k, i]], {i, 4}], {k, 8}, {j, 
       4}] + Table[
      Sum[sigdep[[i, j]]*epduVm[[k, i]], {i, 4}], {k, 8}, {j, 4}];
   sigdu = Table[chsb3[Table[sigVdu[[m, i]], {i, 4}]], {m, 8}];
   (*[8,4,4]*)
   (*_____________________________________________*)
   subsPoly2 = 
    Table[Flatten[{x -> (xy0[[i, 1]] + duv[[i, 1]]), 
       y -> (xy0[[i, 2]] + duv[[i, 2]]), 
       Table[kk[j] -> lc[[i, j]], {j, 2}]}], {i, 4}];
   (*Do[U2[i] = Table[duv[[j, i]], {j,4}], {i,2}];*)
   U2 = Table[duv[[j, i]], {j, 4}, {i, 2}];
   dU2 = 
    Table[D[U2[[i, j]], Flatten[U2][[m]]], {m, 8}, {i, 4}, {j, 2}];(*[
   8,4,2]*)
   M2 = Table[poly /. subsPoly2[[i]], {i, 4}];
   coefdU2 = Inverse[M2];(*[4,4]*)
   dMdU2 = 
    Table[D[M2[[i, j]], Flatten[U2][[m]]], {m, 8}, {i, 4}, {j, 4}];
   
   dcoefdU21 = 
    Table[Sum[-coefdU2[[i, j]]*dMdU2[[m, j, k]], {j, 4}], {m, 8}, {i, 
      4}, {k, 4}];
   dcoefdU22 = 
    Table[Sum[dcoefdU21[[m, i, j]]*coefdU2[[j, k]], {j, 4}], {m, 
      8}, {i, 4}, {k, 4}];
   dcoefdU2 = 
    Table[D[coefdU2[[i, j]], Flatten[U2][[m]]], {m, 8}, {i, 4}, {j, 
      4}];(*它还有duv*)
   (*[8,4,4]*)
   
   
   ddcoefdU2 = 
    Table[D[dcoefdU2[[n, i, j]], Flatten[U2][[m]]], {n, 8}, {m, 
      8}, {i, 4}, {j, 4}];
   (*dcoefdU2=dcoefdU2/.subsu;*)
   (*[8,8,4,4]*)
   coef02 = 
    Table[Sum[coefdU2[[i, j]]*U2[[j, k]], {j, 4}], {k, 2}, {i, 4}] /. 
     subsu;
   (*[2,4]*)
   dcoef02 = 
    Table[Sum[coefdU2[[i, j]]*dU2[[m, j, k]], {j, 4}], {m, 8}, {k, 
        2}, {i, 4}] + 
      Table[Sum[dcoefdU2[[m, i, j]]*U2[[j, k]], {j, 4}], {m, 8}, {k, 
        2}, {i, 4}] /. subsu;(*[8,2,4]*)
   
   ddcoef02 = 
    Table[Sum[dcoefdU2[[n, i, j]]*dU2[[m, j, k]], {j, 4}], {m, 8}, {n,
         8}, {k, 2}, {i, 4}] + 
      Table[Sum[ddcoefdU2[[n, m, i, j]]*U2[[j, k]], {j, 4}], {m, 
        8}, {n, 8}, {k, 2}, {i, 4}] + 
      Table[Sum[dcoefdU2[[m, i, j]]*dU2[[n, j, k]], {j, 4}], {m, 
        8}, {n, 8}, {k, 2}, {i, 4}] /. subsu;
   
   (*前导后不导时逆转，后导前不导时顺溜*)
   
   Xl2 = {{Sum[dNNdkk1[[i]]*(xy0[[i, 1]] + duv[[i, 1]]), {i, 4}], 
      Sum[dNNdkk1[[i]]*(xy0[[i, 2]] + duv[[i, 2]]), {i, 4}]}, {Sum[
       dNNdkk2[[i]]*(xy0[[i, 1]] + duv[[i, 1]]), {i, 4}], 
      Sum[dNNdkk2[[i]]*(xy0[[i, 2]] + duv[[i, 2]]), {i, 4}]}};
   (*[2,2]*)
   
   dXl2 = 
    Table[D[Xl2[[i, j]], Flatten[U2][[m]]], {m, 8}, {i, 2}, {j, 
       2}] /. subsu;
   (*[8,2,2]*)
   
   detXl2 = Det[Xl2] /. subsu /. check[xy0, {0, 0}];
   detXl2du = Table[D[Det[Xl2], Flatten[U2][[m]]], {m, 8}](*/.subsu/. 
   check[xy0, {0, 0}]*);
   
   detXl2du = detXl2du /. subsu /. check[xy0, {0, 0}];
   Xl2 = Xl2 /. subsu;
   
   lX2 = Inverse[Xl2];
   lX2dXl2 = divM[Xl2];
   
   dlX2 = 
    Table[Sum[
       lX2dXl2[[k, l, i, j]]*dXl2[[m, k, l]], {k, 2}, {l, 2}], {m, 
       8}, {i, 2}, {j, 2}] /. subsu;
   
   polydxd1 = Table[D[poly[[i]], poly[[j]]], {i, 4}, {j, 2, 3}];
   dpoly = 
    Table[D[poly[[i]], Flatten[U2][[m]]], {m, 8}, {i, 4}] /. subsu;
   dpolydxd1 = Table[0, 8, 4, 2];
   
   polydkk = Table[D[poly[[i]], kk[j]], {i, 4}, {j, 2}];
   polydxd2 = 
    Table[Sum[polydkk[[i, j]]*lX2[[j, k]], {j, 2}], {i, 4}, {k, 2}] /. 
     check[xy0, {0, 0}];
   
   dpolydxd2 = 
    Table[Sum[polydkk[[i, j]]*dlX2[[m, j, k]], {j, 2}], {m, 8}, {i, 
       4}, {k, 2}] /. check[xy0, {0, 0}];
   
   polydxd = polydxd1 + polydxd2;
   
   dpolydxd = 
    Table[dpolydxd1[[m, i, j]] + dpolydxd2[[m, i, j]], {m, 8}, {i, 
       4}, {j, 2}] /. subsu;
   (*dpolydxd==0*)
   
   
   ux2 = 
    Table[Sum[coef02[[i, j]]*polydxd[[j, k]], {j, 4}], {i, 2}, {k, 
       2}] /. subsu;
   
   
   dux2 = 
    Table[Sum[dcoef02[[m, i, j]]*polydxd[[j, k]], {j, 4}], {m, 
        8}, {i, 2}, {k, 2}] + 
      Table[Sum[coef02[[i, j]]*dpolydxd[[m, j, k]], {j, 4}], {m, 
        8}, {i, 2}, {k, 2}] /. subsu;
   ddux2 = 
    Table[Sum[ddcoef02[[n, m, i, j]]*polydxd[[j, k]], {j, 4}], {m, 
       8}, {n, 8}, {i, 2}, {k, 2}](*+ Table[Sum[dcoef02[[m,i,j]]*
     dpolydxd[[n,j,k]],{j,4}],{m,8},{n,8}, {i, 2},{k,2}]+Table[Sum[
     dcoef02[[n,i,j]]*dpolydxd[[m,j,k]],{j,4}],{m,8},{n,8}, {i, 2},{k,
     2}]*)/. subsu;
   
   \[Epsilon]2 = Simplify[(ux2 + (ux2)\[Transpose]) / 2];
   \[Epsilon]du2 = 
    Table[Simplify[dux2[[m]] + (dux2[[m]])\[Transpose]], {m, 8}] / 
     2 ;
   d\[Epsilon]du2 = 
    Table[Simplify[ddux2[[m, n]] + (ddux2[[m, n]])\[Transpose]], {m, 
       8}, {n, 8}] / 2 ;
   
   \[Epsilon]2m = {{\[Epsilon]2[[1, 1]], \[Epsilon]2[[1, 2]], 
      0}, {\[Epsilon]2[[2, 1]], \[Epsilon]2[[2, 2]], 0}, {0, 0, 0}};
   
   \[Epsilon]du2m = Table[0, 8, 2, 2];
   Do[Do[\[Epsilon]du2m[[k, i]] = 
      Append[\[Epsilon]du2[[k, i]], 0], {i, 2}], {k, 8}];
   Do[\[Epsilon]du2m[[k]] = 
     Append[\[Epsilon]du2m[[k]], {0, 0, 0}], {k, 8}];
   (*\[Delta]\[Epsilon]du=\[Epsilon]du2m;*)
   \[Delta]\[Epsilon] = \[Epsilon]du2m;
   d\[Epsilon]du2m = Table[0, 8, 8, 2, 2];
   Do[Do[
     d\[Epsilon]du2m[[m, k, i]] = 
      Append[d\[Epsilon]du2[[m, k, i]], 0], {i, 2}], {m, 8}, {k, 8}];
   Do[d\[Epsilon]du2m[[m, k]] = 
     Append[d\[Epsilon]du2m[[m, k]], {0, 0, 0}], {m, 8}, {k, 8}];
   \[Delta]\[Epsilon]du = d\[Epsilon]du2m;
   getCoefList[fpV_, xy01_] := 
    Module[{subskk = check[xy01, {0, 0}], fpV1 = Chop[fpV]}, 
     coef0 = fpV1 /. subskk;
     coef1 = Coefficient[fpV1, (kk[1])] /. subskk;
     coef11 = Coefficient[fpV1, (kk[2])] /. subskk;
     coef2 =
      Coefficient[fpV1, (kk[1] kk[2])] /. subskk;
     coef22 =
      Coefficient[fpV1, (kk[1])^2 ] /. subskk;
     coef3 = Coefficient[fpV1, (kk[2])^2 ] /. subskk;
     Return[{coef0, coef1, coef11, coef2, coef22, coef3}];
     ];
   fpV = 
    Table[Sum[
        Simplify[sigm[[i, j]] \[Delta]\[Epsilon][[k, i, j]]], {i, 
         3}, {j, 3}], {k, 8}]*detXl2 /. subsu;
   (*Print["fpV=",fpV];*)
   coe = Table[ getCoefList[fpV[[i]], xy0], {i, 8}];
   Fint = Table[coeflist1 = coe[[i]];
     (*Print["coeflist1=",coeflist1];*)
     coeflist1 . FHlist, 
     {i, 8}];
   
   KpV1 = 
    Table[Sum[
       Simplify[sigdu[[m, i, j]] \[Delta]\[Epsilon][[n, i, j]] ], {i, 
        3}, {j, 3}], {m, 8}, {n, 8}] detXl2;
   KpV2 = 
    Table[Sum[
       Simplify[
        sigm[[i, j]] \[Delta]\[Epsilon]du[[m, n, i, j]] ], {i, 
        3}, {j, 3}], {n, 8}, {m, 8}] detXl2;
   KpV3 = 
    Table[Sum[
      Simplify[
       detXl2du[[m]]*
        sigm[[i, j]] \[Delta]\[Epsilon][[n, i, j]] ], {i, 3}, {j, 
       3}], {m, 8}, {n, 8}] ;
   KpV = KpV1 + KpV2 + KpV3 /. subsu;
   (*Print["KpV=",KpV];*)
   K = Table[coeflist2 = getCoefList[KpV[[m, n]], xy0];
     coeflist2 . FHlist,
     {m, 8}, {n, 8}];
   (*Print["K = \n", MatrixForm[K]];*)
   (*Print["\[Epsilon] = \n", Chop[lem /.subsu/. check[xy0, {0, 0}]] // 
   MatrixForm];
   Print["\[Sigma] = \n", Chop[sigm /.subsu/. check[xy0, {0, 0}]] // 
   MatrixForm];*)
   Return[{lem /. subsu /. check[xy0, {0, 0}], 
     sigm /. subsu /. check[xy0, {0, 0}], Fint , K, ep1, peeq1}];
   ];
getGlobalFint[Fint00_, f10_, labelOfElement0_] := 
  Module[{elementNodes, Fintall, elementF, elementDofs},
   
   elementNodes = labelOfElement0;
   Fintall = Fint00;
   elementF = f10;
   elementDofs = 
    Flatten[Table[2 (node - 1) + {1, 2}, {node, elementNodes}]];
   
   Do[Fintall[[elementDofs[[i]]]] += elementF[[i]], {i, 
     Length[elementDofs]}];
   Return[Fintall];
   ];

GetK[K00_, k10_, labelOfElement0_] := 
  Module[{elementNodes, Kall, elementK, elementDofs},
   
   elementNodes = labelOfElement0;
   Kall = K00;
   elementDofs = 
    Flatten[Table[2 (node - 1) + {1, 2}, {node, elementNodes}]];
   (*Print["elementDofs=",elementDofs];*)
   elementK = k10;
   Do[Kall[[elementDofs[[i]], elementDofs[[j]]]] += 
     elementK[[i, j]], {i, Length[elementDofs]}, {j, 
     Length[elementDofs]}];
   Return[Kall];
   ];
xy0 = {{0, 1}, {0, 0}, {1, 0}, {1, 1}, {2, 0}, {2, 0.5}};
uv0 = {{0.05, 0}, {-0.05, 0}, {0.05, 0}, {0, 0}, {0.05, 0}, {0, 0}};
combination[xyz0_, uvw0_, leu_, ep0_, peeq0_] := 
  Module[{xyz1, uvw1, element1, element2, Fint1, KK1, Fint2, KK2, 
    Fint0, K0, globalF1, globalF2, globalK1, globalK2},
   
   jdm[1] = {1, 2, 3, 4};
   jdm[2] = {4, 3, 5, 6};
   Do[xyz1[i] = Table[xyz0[[jdm[i][[j]]]], {j, 4}], {i, 2}];
   Do[uvw1[i] = Table[uvw0[[jdm[i][[j]]]], {j, 4}], {i, 2}];
   (*Print["xyz1[2]=",xyz1[2]];
   Print["uvw1[2]=",uvw1[2]];*)
   element1 = 
    cps4R[xyz1[1], uvw1[1], leu[[1]], ep0[[1]], peeq0[[1]]];
   {Fint1, KK1} = Table[element1[[j]], {j, 3, 4}];
   
   
   let = element1[[1]];
   
   ept = chb3[element1[[5]]];
   peeqt = element1[[6]];
   
   element2 = 
    cps4R[xyz1[2], uvw1[2], leu[[2]], ep0[[2]], peeq0[[2]]];
   {Fint2, KK2} = Table[element2[[j]], {j, 3, 4}];
   let2 = element2[[1]];
   
   ept2 = chb3[element2[[5]]];
   peeqt2 = element2[[6]];
   Fint0 = Table[0, 12];
   K0 = Table[0, 12, 12];
   globalF1 = getGlobalFint[Fint0, Fint1, jdm[1]];
   globalF2 = getGlobalFint[globalF1, Fint2, jdm[2]];
   globalK1 = GetK[K0, KK1, jdm[1]];
   globalK2 = GetK[globalK1, KK2, jdm[2]];
   Return[{globalF2, globalK2, let, ept, peeqt, let2, ept2, peeqt2}];
   ];
leu = Table[0, 2, 3, 3]; ep0 = Table[0, 2, 3, 3]; peeq0 = 
 Table[0, 2];
result1 = combination[xy0, uv0, leu, ep0, peeq0];
Print["Fint1=", MatrixForm[ArrayReshape[result1[[1]], {6, 2}]]];
Print["K1=", MatrixForm[result1[[2]]]];
Print["ep1=", {result1[[4]], result1[[7]]}, 
  "\npeeq1=", {result1[[5]], result1[[8]]}];
Print["-------------------------------------------"];
xy0 += uv0;
leu2 = {result1[[3]], result1[[6]]}; ep02 = {result1[[4]], 
  result1[[7]]}; peeq02 = {result1[[5]], result1[[8]]};
result2 = combination[xy0, uv0, leu2, ep02, peeq02];
Print["Fint2=", MatrixForm[ArrayReshape[result2[[1]], {6, 2}]]];
Print["K2=", MatrixForm[result2[[2]]]];
Print["ep1=", {result2[[4]], result2[[7]]}, 
  "\npeeq1=", {result2[[5]], result2[[8]]}];
Print["-------------------------------------------"];
uv0 += \[Delta]uv;

result22 = combination[xy0, uv0, leu2, ep02, peeq02];
(*Print["Fint22=",ArrayReshape[result22[[1]],{6,2}]];
Print["K22=",MatrixForm[result22[[2]]]];*)
Print["-------------------------------------------"];
\[Delta]thing = result22[[1]] - result2[[1]];
thing\[Delta]u = \[Delta]thing/0.0000001;

niudunFext[xyz0_, uvw0_] := 
  Module[{xyz00, uvw00, ih0, Fext, ab, elementh, Finth, Kh, rw, Res, 
    dds, Finth0, Kh0, RF},
   xyz00 = xyz0;
   uvw00 = uvw0;
   leu0 = Table[0, 2, 3, 3];
   ep00 = Table[0, 2, 3, 3];
   peeq00 = Table[0, 2];
   ih0 = 0;
   Fext = Table[0, 6, 2];
   constrainPoint = {1, 3, 5, 6};
   freePoint = {2, 4};
   Do[
    ab = 1.5;
    If[iv < 11,
     {Fext[[2, 1]] += ab;
      Fext[[4, 1]] += 2*ab;}(*,
     {Fext[[2,1]]+=0.25*ab;
     Fext[[4,1]]+=0.5*ab;
     }*)];
    Print[iv, "    Start:          Fext=", Fext];
    Print[iv, "    Start:          uv00=", uvw00];
    
    Do[
     ih0++;
     elementh = combination[xyz00, uvw00, leu0, ep00, peeq00];
     Finth = elementh[[1]];
     Kh = elementh[[2]];
     
     Do[
      c1 = constrainPoint[[i3]];
      Do[Kh[[i, i]] = Kh[[i, i]]*10^7, {i, (2*c1 - 1), 2*c1}],
      {i3, Length[constrainPoint]}];
     (*Print["Kh特征值=",Eigenvalues[Kh]];*)
     rw = Flatten[Fext] - Finth;
     Res = 0;
     Do[
      c2 = freePoint[[i4]];
      Res += Sum[(rw[[(2*c2 - m)]])^2, {m, 0, 1}],
      {i4, Length[freePoint]}];
     Print[iv, ",  ", ih, "  Res=", Res];
     If[Res <= 10^-6, {ih0 = ih; Break[];}];
     dds = Inverse[Transpose[Kh]] . rw;
     uvw00 = uvw00 + ArrayReshape[dds, {6, 2}];
     , {ih, 10}];
    Print[iv, "   ", ih0, "   *************solution************* :  "];
    Finth0 = elementh[[1]];
    Kh0 = elementh[[2]];
    RF = Finth0 - Flatten[Fext];
    Print["\nFint=", MatrixForm[ArrayReshape[Finth0, {6, 2}]], 
     "\nRF=", MatrixForm[ArrayReshape[RF, {6, 2}]], "\nK=", 
     MatrixForm[Kh0]];
    Print["-------------------------------------------"];
    (*uvw00+=\[Delta]uvw;
    result22=combination[xyz00,uvw00,leu0,ep00,peeq00];
    F\[Delta]u=(result22[[1]]-elementh[[1]])/0.00000001;
    Print["F\[Delta]u=",F\[Delta]u];
    Print["-------------------------------------------"];*)
    Print["leu0=", leu0, "\nep00=", ep00, "\npeeq00=", peeq00];
    leu0 = {elementh[[3]], elementh[[6]]}; 
    ep00 = {elementh[[4]], elementh[[7]]}; 
    peeq00 = {elementh[[5]], elementh[[8]]};
    Print["xyz00=", xyz00, "\nuvw00=", uvw00];
    xyz00 += uvw00;
    uvw00 = uvw0;
    ih0 = 0;
    , {iv, 10}];
   ];
xy0 = {{0, 1}, {0, 0}, {1, 0}, {1, 1}, {2, 0}, {2, 0.5}};
uv0 = {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}};

niudunFext[xy0, uv0];
